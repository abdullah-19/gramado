Descrição das partes do subsistema de input/output
no sistema operacional Gramado.

subsistema de input


INPUT DRIVER -> INPUT CORE -> INPUT HANDLER


================


INPUT DRIVER:
     O driver de dispositivo será o primeiro a interagir com o evento de input.
Esse driver terá a missão de enviar a mensagem para o INPUT CORE.
     Os drivers que recebem eventos de input podem estar em qualquer lugar
do ambiente kernel mode, em ring0, inclusive podem estar no próprio kernel base.
     Um driver no kernel base pode ser desabilitado quando outro driver em kernel mode
for habilitado e pode ser reabilitado quando necessário.
     Os drivers geradores de input poderiam ser também todo tipo de gerador de mensagem.
     como o driver de socket, de envio de mensagem, driver de rede, um terminal virtual ... etc ...


INPUT CORE:
     Essa é a parte do subsistema de input responsável por centralizar todos os tipos 
de eventos de input e transformá-los em mensagens do tipo 'diálogo' ou 'procedimento' e
enviar essas mensagens para o INPUT HANDLER.
     O INPUT CORE não deve se preocupar com a origem dos eventos, apenas transformá-los em mensagens e enviá-las para o INPUT HANDLER.

INPUT HANDLER:
     Essa é a parte do subsistema de input responsável por receber mensagens do INPUT CORE e direcioná-las ao handler apropriado. Ele pode enviar essas mensagens para filas de mensagens em janelas, threads, processos, mailbox, sockets etc ... 


=========================================================================
=========================================================================


subsistema de output.


OUTPUT DRIVER -> OUTPUT CORE  -> OUTPUT HANDLER


==============================================

OUTPUT DRIVER:
    Esses seriam os drivers geradores de eventos de output.
    O trabalho de um driver de output é enviar o evento para 
o OUTPUT CORE.

    toda aplicação é um driver gerador de output.
    o kernel base e os servidores também podem ser geradores de output.

OUTPUT CORE:
     Essa é a parte centralizadora de enventos de output.
     Aqui os eventos de output serão transformados em mensagens e
enviadas para o OUTPUT HANDLER.


OUTPUT HANDLER:
     Aqui a mensagem recebida deve ser emcaminhada para o driver responsável
pela exibição do conteúdo da mensagem ...
     Essa emsagem poderá ser enviada para um driver de vídeo ou para
um driver de impressora. O OUTPUT HANDLER será o responsável por identificar o
destino da mensagem e encaminhar de forma apropriada para o dispositivo habilitado para
receber a mensagem. 








